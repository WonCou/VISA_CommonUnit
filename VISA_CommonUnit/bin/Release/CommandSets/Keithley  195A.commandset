#########################严格按照格式书写,如果没有说明内容 也可写为 !1/2/3  expr  的形式，但!1/2/3必须顶格写 
#ControlCommand#
#########################
#ControlCommand标识			 命令内容								           命令是否有返回信息(是:1,否0)	
!1		B0X		#		1		#		从A/D直接读回值\n B0X  为从Buffer读回,\n对单次读数来说两者没有差别 \n但一般使用B0X，因为使用B1X会出现ldcc错误   \n \n参考195A 手册 4-16
!1		S9X		#		0		#		读数设置:  积分时间100ms,5位半读数,8点平均\n   S0为3.33ms,3位半,1点平均 \n值越大越慢 \n \n参考195A 手册 4-15
!1		F6X		#		0		#		摄氏温度功能\n 直流电压:  F0X    \n 交流电压:  F1X  \n       电阻:  F2X \n 直流电流:  F3X  \n 交流电流:  F4X \n 华氏温度:  F5X  \n \n参考195A 手册 4-15
!1		R0X		#		0		#		自动量程,\n R0~R7可选,值越大量程越大\n 参考195A 手册 4-15
!1		D 195A X		#		0		#		显示 195A 这4个字符到显示界面
!1		DCLX		#		0		#		Device Clear \n清除仪器显示
!1		SDCX		#		0		#		Selective Device Clear \n 清除屏幕显示(屏幕关闭)






			

##ReltiveRegexExpression##
#########################与正则表达式相关命令  每行以 一个感叹号加2(!2)顶格开始 接空格或Tab 后面是正则表达式  接着是空格或Tab 然后一个 # 空格或tab分割后是前面表达式的说明
#标识               正则表达式																		前面命令的说明
!2		([A-Za-z]{7}-)|([0-9]{5})|([0-9])						#			取出7个字母加\n一个减号-的部分 \n接着往后 取出一个5位数 最后取出 一位数

###ReltiveGNUCoreutilsExpression###
#########################与 GNUCoreutils 相关命令 每行以 一个感叹号加3(!3)顶格开始 接空格或Tab 后面是GNUCoreutils命令  接着是空格或Tab 然后一个 # 空格或tab分割后是前面表达式的说明
!3		awk -F, "{print $1 \"  \" $2}"		#		取出以逗号","为分割符的第一列 第二列，第一列和第二列之间用空格分隔				
!3		awk -F, "{print $1 \"  \" $3}" | rev		#		取出以逗号","为分割符的第一列 第二列，第一列和第二列之间用空格分隔，最后把字符串反过来				
!3		tr "[A-Z]" "[a-z}"		#		转换所有大写字母为小写				
!3		tr  [:lower:]  [:upper:] 		#		转换所有小写字母为大写				
!3		tr [:upper:] [:lower:]  |  sed -e "s/\b\(.\)/\u\1/g"		#		只大写单词的第一个字母,其它所有字母小写				
!3		tr [:upper:] [:lower:]  |  sed -e "s/\b\(.\)/\u\1/g" | sed  "s@[^a-zA-Z][a-z][^a-zA-Z]@\U&@g" 		#		只大写单词的第一个字母,但是单个字母的全部大写				
!3		sed "s@^[A-Z]*@@g"		#		温度测量时格式化
!3		sed "s@^[A-Z]*@@g" | sed "s@+00@@g" | awk "{print $0 \" ℃ \"}"	  #		温度测量时格式化添加摄氏度符号			
!3		sed "s@D.*+00@@g" | sed "s@+0@+04@g"		#		温度测量时格式化,把值放大10^4倍				
			

